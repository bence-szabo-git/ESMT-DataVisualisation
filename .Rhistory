names_to = "statistic_type",
values_to = "age_difference"
)
# 2. Plot Area Chart
ggplot(age_trends_long, aes(x = release_year, y = age_difference, fill = statistic_type)) +
# Use geom_area to create a filled plot
geom_area(alpha = 0.5, position = "identity") +
# Add the original line over the area for clarity
geom_line(aes(color = statistic_type), linewidth = 0.8) +
theme_minimal() +
labs(
title = "Trends in Mean and Median Age Differences Over the Years (Area Plot)",
x = "Release Year",
y = "Age Difference (years)",
fill = "Statistic"
) +
# Use the same colors for consistency
scale_fill_manual(
values = c("mean_age_difference" = "blue", "median_age_difference" = "red"),
labels = c("Mean Age Difference", "Median Age Difference")
) +
scale_color_manual(
values = c("mean_age_difference" = "blue", "median_age_difference" = "red"),
labels = c("Mean Age Difference", "Median Age Difference")
) +
# Use theme adjustments to manage the scales
theme(
legend.title = element_blank(),
legend.position = "top"
)
library(RColorBrewer) # For softer color palettes
# 1. Prepare data: Convert from wide to long format (same as before)
age_trends_long <- age_trends %>%
pivot_longer(
cols = c(mean_age_difference, median_age_difference),
names_to = "statistic_type",
values_to = "age_difference"
)
# --- Plot Area Chart with Softer Colors ---
ggplot(age_trends_long, aes(x = release_year, y = age_difference, fill = statistic_type)) +
geom_area(alpha = 0.6, position = "identity") + # Slightly increased alpha for a bit more solidity
geom_line(aes(color = statistic_type), linewidth = 0.9) + # Slightly thicker line
theme_minimal() +
labs(
title = "Trends in Mean and Median Age Differences Over the Years",
x = "Release Year",
y = "Age Difference (years)",
fill = "Statistic"
) +
# *** KEY CHANGE: Using a softer custom color palette ***
scale_fill_manual(
values = c(
"mean_age_difference" = "#85A3C7", # Softer blue
"median_age_difference" = "#E89B9B" # Softer red/rose
),
labels = c("Mean Age Difference", "Median Age Difference")
) +
scale_color_manual( # Use slightly darker versions for the lines to stand out
values = c(
"mean_age_difference" = "#4A709E", # Darker shade of the blue
"median_age_difference" = "#C76F6F" # Darker shade of the red/rose
),
labels = c("Mean Age Difference", "Median Age Difference")
) +
theme(
legend.title = element_blank(),
legend.position = "top",
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
)
head(age_gaps)
head(age_gaps)
skimr::skim(age_gaps)
same_gender_trends <- age_gaps %>%
# 1. Create a logical column: TRUE if genders match, FALSE otherwise
mutate(is_same_gender = (character_1_gender == character_2_gender)) %>%
# 2. Group the data by release year
group_by(release_year) %>%
# 3. Summarize the counts
summarise(
# sum(is_same_gender) counts TRUEs (which are treated as 1)
same_gender_count = sum(is_same_gender, na.rm = TRUE),
# n() counts all rows in the group
total_couples = n(),
.groups = 'drop' # Ungroup the data after summarizing
) %>%
# 4. Calculate the final frequency/proportion
mutate(
same_gender_frequency = same_gender_count / total_couples
)
print(same_gender_trends)
ggplot(same_gender_trends, aes(x = release_year, y = same_gender_frequency)) +
# Draw the line to show the trend
geom_line(color = "#4A709E", linewidth = 1) +
# Add points for individual year data
geom_point(color = "#4A709E", size = 2) +
# Format the Y-axis as a percentage
scale_y_continuous(labels = label_percent()) +
theme_minimal() +
labs(
title = "Frequency of Same-Gender Love Interests in Movies (1935 - 2022)",
subtitle = "Proportion of all listed couples per release year",
x = "Release Year",
y = "Frequency of Same-Gender Couples"
) +
theme(
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 12),
panel.grid.minor = element_blank()
)
ggplot(same_gender_trends, aes(x = release_year, y = same_gender_frequency)) +
# Use geom_col for the simplest representation of a value (frequency) by category (year)
geom_col(fill = "#4A709E") +
# Format the Y-axis as a percentage
scale_y_continuous(labels = label_percent()) +
theme_minimal() +
labs(
title = "Frequency of Same-Gender Love Interests in Movies (Bar Chart)",
x = "Release Year",
y = "Frequency of Same-Gender Couples"
) +
theme(
plot.title = element_text(face = "bold"),
# Angle x-axis text for better readability since years are close
axis.text.x = element_text(angle = 90, hjust = 1)
)
ggplot(same_gender_trends, aes(x = release_year, y = same_gender_frequency)) +
# Use geom_col for the simplest representation of a value (frequency) by category (year)
geom_col(fill = "#4A709E") +
# Format the Y-axis as a percentage
scale_y_continuous(labels = label_percent()) +
theme_minimal() +
labs(
title = "Frequency of Same-Gender Love Interests in Movies (Bar Chart)",
x = "Release Year",
y = "Frequency of Same-Gender Couples"
) +
theme(
plot.title = element_text(face = "bold"),
# Angle x-axis text for better readability since years are close
axis.text.x = element_text(angle = 0, hjust = 1)
)
same_gender_trends <- age_gaps %>%
mutate(is_same_gender = (character_1_gender == character_2_gender)) %>%
filter(release_year >= 1990) %>%
group_by(release_year) %>%
summarise(
same_gender_count = sum(is_same_gender, na.rm = TRUE),
total_couples = n(),
.groups = 'drop'
) %>%
mutate(
same_gender_frequency = same_gender_count / total_couples
)
ggplot(same_gender_trends, aes(x = release_year, y = same_gender_frequency)) +
# Use geom_col for the simplest representation of a value (frequency) by category (year)
geom_col(fill = "#4A709E") +
# Format the Y-axis as a percentage
scale_y_continuous(labels = label_percent()) +
theme_minimal() +
labs(
title = "Frequency of Same-Gender Love Interests in Movies (Bar Chart)",
x = "Release Year",
y = "Frequency of Same-Gender Couples"
) +
theme(
plot.title = element_text(face = "bold"),
# Angle x-axis text for better readability since years are close
axis.text.x = element_text(angle = 0, hjust = 1)
)
same_gender_trends <- age_gaps %>%
mutate(is_same_gender = (character_1_gender == character_2_gender)) %>%
filter(release_year >= 1995) %>%
group_by(release_year) %>%
summarise(
same_gender_count = sum(is_same_gender, na.rm = TRUE),
total_couples = n(),
.groups = 'drop'
) %>%
mutate(
same_gender_frequency = same_gender_count / total_couples
)
ggplot(same_gender_trends, aes(x = release_year, y = same_gender_frequency)) +
# Use geom_col for the simplest representation of a value (frequency) by category (year)
geom_col(fill = "#4A709E") +
# Format the Y-axis as a percentage
scale_y_continuous(labels = label_percent()) +
theme_minimal() +
labs(
title = "Frequency of Same-Gender Love Interests in Movies (Bar Chart)",
x = "Release Year",
y = "Frequency of Same-Gender Couples"
) +
theme(
plot.title = element_text(face = "bold"),
# Angle x-axis text for better readability since years are close
axis.text.x = element_text(angle = 0, hjust = 1)
)
ggplot(same_gender_trends, aes(x = release_year, y = same_gender_frequency)) +
# Use geom_col for the simplest representation of a value (frequency) by category (year)
geom_col(fill = "#4A709E") +
# Format the Y-axis as a percentage
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(
# 'breaks' defines where the ticks and labels appear
breaks = seq(1990, max(same_gender_trends$release_year, na.rm = TRUE), by = 5)
) +
theme_minimal() +
labs(
title = "Frequency of Same-Gender Love Interests in Movies (Bar Chart)",
x = "Release Year",
y = "Frequency of Same-Gender Couples"
) +
theme(
plot.title = element_text(face = "bold"),
# Angle x-axis text for better readability since years are close
axis.text.x = element_text(angle = 0, hjust = 1)
)
ggplot(same_gender_trends, aes(x = release_year, y = same_gender_frequency)) +
# Use geom_col for the simplest representation of a value (frequency) by category (year)
geom_col(fill = "#4A709E") +
# Format the Y-axis as a percentage
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(
# 'breaks' defines where the ticks and labels appear
breaks = seq(1995, max(same_gender_trends$release_year, na.rm = TRUE), by = 5)
) +
theme_minimal() +
labs(
title = "Frequency of Same-Gender Love Interests in Movies (Bar Chart)",
x = "Release Year",
y = "Frequency of Same-Gender Couples"
) +
theme(
plot.title = element_text(face = "bold"),
# Angle x-axis text for better readability since years are close
axis.text.x = element_text(angle = 0, hjust = 1)
)
ggplot(same_gender_trends, aes(x = release_year, y = same_gender_frequency)) +
geom_col(fill = "#4A709E") +
scale_y_continuous(labels = label_percent()) +
scale_x_continuous(
breaks = seq(1995, max(same_gender_trends$release_year, na.rm = TRUE), by = 5)
) +
theme_minimal() +
labs(
title = "Frequency of Same-Gender Love Interests in Movies (Bar Chart)",
x = "Release Year",
y = "Frequency of Same-Gender Couples"
) +
theme(
plot.title = element_text(face = "bold"),
)
knitr::include_graphics(here::here("images", "challenge1.png"), error = FALSE)
top_12_cities <- rent %>%
count(city, sort = TRUE) %>%
slice_head(n = 12) %>%
pull(city) # Extract the vector of top 12 city names
sf_median_rent <- rent %>%
filter(beds %in% c(0, 1, 2)) %>%
filter(city %in% top_12_cities) %>%
group_by(year, city, beds) %>%
summarise(
median_price = median(price, na.rm = TRUE),
.groups = 'drop'
) %>%
group_by(city, beds) %>%
arrange(year) %>%
mutate(
base_price = first(median_price),
pct_change = (median_price - base_price) / base_price * 100
) %>%
ungroup()
ggplot(sf_median_rent, aes(
x = year,
y = pct_change,
group = interaction(city, beds),
color = city
)) +
geom_line(linewidth = 0.8, alpha = 0.7) +
scale_color_brewer(palette = "Set3") +
facet_wrap(~ beds, ncol = 3) +
theme_minimal() +
labs(
title = "Cumulative % Change in Median Rental Prices Over Time in Bay Area",
subtitle = "Separated by Number of Bedrooms (0 to 2)",
x = "Year",
y = "Cumulative % Change"
) +
theme(
plot.title = element_text(face = "bold"),
strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_rect(color = "gray30", fill = NA, linewidth = 1),
strip.background = element_rect(fill = "gray90", color = "gray30", linewidth = 1),
legend.position = "none"
)
ggplot(sf_median_rent, aes(
    x = year, 
ggplot(sf_median_rent, aes(x = year, y = pct_change,
group = interaction(city, beds),
color = city
)) +
geom_line(linewidth = 0.8, alpha = 0.7) +
scale_color_brewer(palette = "Set3") +
facet_grid(beds ~ city) +
theme_minimal() +
labs(
title = "Cumulative % Change in Median Rental Prices Over Time in Bay Area",
subtitle = "Faceted by City and Number of Bedrooms",
x = "Year",
y = "Cumulative % Change"
) +
theme(
plot.title = element_text(face = "bold"),
strip.text = element_text(size = 10, face = "bold"), # Adjusted size for clarity
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_rect(color = "gray30", fill = NA, linewidth = 1),
strip.background = element_rect(fill = "gray90", color = "gray30", linewidth = 1),
legend.position = "none" # Legend is redundant since cities are in columns
)
```{r fig.width=15, fig.height=6}
top_12_cities <- rent %>%
count(city, sort = TRUE) %>%
slice_head(n = 12) %>%
pull(city) # Extract the vector of top 12 city names
sf_median_rent <- rent %>%
filter(beds %in% c(0, 1, 2)) %>%
filter(city %in% top_12_cities) %>%
group_by(year, city, beds) %>%
summarise(
median_price = median(price, na.rm = TRUE),
.groups = 'drop'
) %>%
group_by(city, beds) %>%
arrange(year) %>%
mutate(
base_price = first(median_price),
pct_change = (median_price - base_price) / base_price * 100
) %>%
ungroup()
ggplot(sf_median_rent, aes(x = year, y = pct_change,
group = interaction(city, beds),
color = city
)) +
geom_line(linewidth = 0.8, alpha = 0.7) +
scale_color_brewer(palette = "Set3") +
facet_grid(beds ~ city) +
theme_minimal() +
labs(
title = "Cumulative % Change in Median Rental Prices Over Time in Bay Area",
subtitle = "Faceted by City and Number of Bedrooms",
x = "Year",
y = "Cumulative % Change"
) +
theme(
plot.title = element_text(face = "bold"),
strip.text = element_text(size = 10, face = "bold"), # Adjusted size for clarity
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_rect(color = "gray30", fill = NA, linewidth = 1),
strip.background = element_rect(fill = "gray90", color = "gray30", linewidth = 1),
legend.position = "none" # Legend is redundant since cities are in columns
)
ggplot(sf_median_rent, aes(x = year, y = pct_change,
group = interaction(city, beds),
color = city
)) +
geom_line(linewidth = 0.8, alpha = 0.7) +
scale_color_brewer(palette = "Set3") +
facet_grid(beds ~ city) +
theme_minimal() +
labs(
title = "Cumulative % Change in Median Rental Prices Over Time in Bay Area",
subtitle = "Faceted by City and Number of Bedrooms",
x = "Year",
y = "Cumulative % Change"
) +
theme(
plot.title = element_text(face = "bold"),
strip.text = element_text(size = 10, face = "bold"), # Adjusted size for clarity
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_rect(color = "gray30", fill = NA, linewidth = 1),
strip.background = element_rect(fill = "gray90", color = "gray30", linewidth = 1),
#legend.position = "none" # Legend is redundant since cities are in columns
)
ggplot(sf_median_rent, aes(x = year, y = pct_change,
group = interaction(city, beds),
color = city
)) +
geom_line(linewidth = 0.8, alpha = 0.7) +
scale_color_brewer(palette = "Set3") +
facet_grid(beds ~ city) +
theme_minimal() +
labs(
title = "Cumulative % Change in Median Rental Prices Over Time in Bay Area",
subtitle = "Faceted by City and Number of Bedrooms",
x = "Year",
y = "Cumulative % Change"
) +
theme(
plot.title = element_text(face = "bold"),
strip.text = element_text(size = 10, face = "bold"), # Adjusted size for clarity
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_rect(color = "gray30", fill = NA, linewidth = 1),
strip.background = element_rect(fill = "gray90", color = "gray30", linewidth = 1),
legend.position = "none"
)
ggplot(sf_median_rent, aes(x = year, y = pct_change,
group = interaction(city, beds),
color = city
)) +
geom_line(linewidth = 0.8, alpha = 0.7) +
scale_color_brewer(palette = "Set3") +
facet_grid(beds ~ city) +
theme_minimal() +
labs(
title = "Cumulative % Change in Median Rental Prices Over Time in Bay Area",
subtitle = "Faceted by City and Number of Bedrooms 2000-2018",
x = "Year",
y = "Cumulative % Change"
) +
theme(
plot.title = element_text(face = "bold"),
strip.text = element_text(size = 10, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_rect(color = "gray30", fill = NA, linewidth = 1),
strip.background = element_rect(fill = "gray90", color = "gray30", linewidth = 1),
legend.position = "none"
)
age_trends_long <- age_trends %>%
pivot_longer(
cols = c(mean_age_difference, median_age_difference),
names_to = "statistic_type",
values_to = "age_difference"
)
ggplot(age_trends_long, aes(x = release_year, y = age_difference, fill = statistic_type)) +
geom_area(alpha = 0.6, position = "identity") +
geom_line(aes(color = statistic_type), linewidth = 0.9) +
theme_minimal() +
labs(
title = "Trends in Mean and Median Age Differences Over the Years",
x = "Release Year",
y = "Age Difference (years)",
fill = "Statistic"
) +
scale_fill_manual(
values = c(
"mean_age_difference" = "#85A3C7", # Softer blue
"median_age_difference" = "#E89B9B" # Softer red/rose
),
labels = c("Mean Age Difference", "Median Age Difference")
) +
scale_color_manual( # Use slightly darker versions for the lines to stand out
values = c(
"mean_age_difference" = "#4A709E", # Darker shade of the blue
"median_age_difference" = "#C76F6F" # Darker shade of the red/rose
),
labels = c("Mean Age Difference", "Median Age Difference")
) +
theme(
legend.title = element_blank(),
legend.position = "top",
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
)
age_trends <- age_gaps %>%
  group_by(release_year) %>%
age_trends <- age_gaps %>%
group_by(release_year) %>%
summarise(
mean_age_difference = mean(age_difference, na.rm = TRUE),
median_age_difference = median(age_difference, na.rm = TRUE)
)
age_trends_long <- age_trends %>%
pivot_longer(
cols = c(mean_age_difference, median_age_difference),
names_to = "statistic_type",
values_to = "age_difference"
)
ggplot(age_trends_long, aes(x = release_year, y = age_difference, fill = statistic_type)) +
geom_area(alpha = 0.6, position = "identity") +
geom_line(aes(color = statistic_type), linewidth = 0.9) +
theme_minimal() +
labs(
title = "Trends in Mean and Median Age Differences Over the Years",
x = "Release Year",
y = "Age Difference (years)",
fill = "Statistic"
) +
scale_fill_manual(
values = c(
"mean_age_difference" = "#85A3C7", # Softer blue
"median_age_difference" = "#E89B9B" # Softer red/rose
),
labels = c("Mean Age Difference", "Median Age Difference")
) +
scale_color_manual( # Use slightly darker versions for the lines to stand out
values = c(
"mean_age_difference" = "#4A709E", # Darker shade of the blue
"median_age_difference" = "#C76F6F" # Darker shade of the red/rose
),
labels = c("Mean Age Difference", "Median Age Difference")
) +
theme(
legend.title = element_blank(),
legend.position = "top",
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
)
